/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IniciarSesionRouteImport } from './routes/iniciar-sesion'
import { Route as DashboardLayoutRouteImport } from './routes/_dashboard-layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardLayoutDashboardIndexRouteImport } from './routes/_dashboard-layout/dashboard/index'
import { Route as DashboardLayoutDashboardTicketsRouteImport } from './routes/_dashboard-layout/dashboard/tickets'
import { Route as DashboardLayoutDashboardConfiguracionRouteImport } from './routes/_dashboard-layout/dashboard/configuracion'
import { Route as DashboardLayoutDashboardUsuariosIndexRouteImport } from './routes/_dashboard-layout/dashboard/usuarios/index'
import { Route as DashboardLayoutDashboardTiendasIndexRouteImport } from './routes/_dashboard-layout/dashboard/tiendas/index'
import { Route as DashboardLayoutDashboardUsuariosNuevoUsuarioRouteImport } from './routes/_dashboard-layout/dashboard/usuarios/nuevo-usuario'

const IniciarSesionRoute = IniciarSesionRouteImport.update({
  id: '/iniciar-sesion',
  path: '/iniciar-sesion',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardLayoutRoute = DashboardLayoutRouteImport.update({
  id: '/_dashboard-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardLayoutDashboardIndexRoute =
  DashboardLayoutDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)
const DashboardLayoutDashboardTicketsRoute =
  DashboardLayoutDashboardTicketsRouteImport.update({
    id: '/dashboard/tickets',
    path: '/dashboard/tickets',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)
const DashboardLayoutDashboardConfiguracionRoute =
  DashboardLayoutDashboardConfiguracionRouteImport.update({
    id: '/dashboard/configuracion',
    path: '/dashboard/configuracion',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)
const DashboardLayoutDashboardUsuariosIndexRoute =
  DashboardLayoutDashboardUsuariosIndexRouteImport.update({
    id: '/dashboard/usuarios/',
    path: '/dashboard/usuarios/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)
const DashboardLayoutDashboardTiendasIndexRoute =
  DashboardLayoutDashboardTiendasIndexRouteImport.update({
    id: '/dashboard/tiendas/',
    path: '/dashboard/tiendas/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)
const DashboardLayoutDashboardUsuariosNuevoUsuarioRoute =
  DashboardLayoutDashboardUsuariosNuevoUsuarioRouteImport.update({
    id: '/dashboard/usuarios/nuevo-usuario',
    path: '/dashboard/usuarios/nuevo-usuario',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/iniciar-sesion': typeof IniciarSesionRoute
  '/dashboard/configuracion': typeof DashboardLayoutDashboardConfiguracionRoute
  '/dashboard/tickets': typeof DashboardLayoutDashboardTicketsRoute
  '/dashboard': typeof DashboardLayoutDashboardIndexRoute
  '/dashboard/usuarios/nuevo-usuario': typeof DashboardLayoutDashboardUsuariosNuevoUsuarioRoute
  '/dashboard/tiendas': typeof DashboardLayoutDashboardTiendasIndexRoute
  '/dashboard/usuarios': typeof DashboardLayoutDashboardUsuariosIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/iniciar-sesion': typeof IniciarSesionRoute
  '/dashboard/configuracion': typeof DashboardLayoutDashboardConfiguracionRoute
  '/dashboard/tickets': typeof DashboardLayoutDashboardTicketsRoute
  '/dashboard': typeof DashboardLayoutDashboardIndexRoute
  '/dashboard/usuarios/nuevo-usuario': typeof DashboardLayoutDashboardUsuariosNuevoUsuarioRoute
  '/dashboard/tiendas': typeof DashboardLayoutDashboardTiendasIndexRoute
  '/dashboard/usuarios': typeof DashboardLayoutDashboardUsuariosIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_dashboard-layout': typeof DashboardLayoutRouteWithChildren
  '/iniciar-sesion': typeof IniciarSesionRoute
  '/_dashboard-layout/dashboard/configuracion': typeof DashboardLayoutDashboardConfiguracionRoute
  '/_dashboard-layout/dashboard/tickets': typeof DashboardLayoutDashboardTicketsRoute
  '/_dashboard-layout/dashboard/': typeof DashboardLayoutDashboardIndexRoute
  '/_dashboard-layout/dashboard/usuarios/nuevo-usuario': typeof DashboardLayoutDashboardUsuariosNuevoUsuarioRoute
  '/_dashboard-layout/dashboard/tiendas/': typeof DashboardLayoutDashboardTiendasIndexRoute
  '/_dashboard-layout/dashboard/usuarios/': typeof DashboardLayoutDashboardUsuariosIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/iniciar-sesion'
    | '/dashboard/configuracion'
    | '/dashboard/tickets'
    | '/dashboard'
    | '/dashboard/usuarios/nuevo-usuario'
    | '/dashboard/tiendas'
    | '/dashboard/usuarios'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/iniciar-sesion'
    | '/dashboard/configuracion'
    | '/dashboard/tickets'
    | '/dashboard'
    | '/dashboard/usuarios/nuevo-usuario'
    | '/dashboard/tiendas'
    | '/dashboard/usuarios'
  id:
    | '__root__'
    | '/'
    | '/_dashboard-layout'
    | '/iniciar-sesion'
    | '/_dashboard-layout/dashboard/configuracion'
    | '/_dashboard-layout/dashboard/tickets'
    | '/_dashboard-layout/dashboard/'
    | '/_dashboard-layout/dashboard/usuarios/nuevo-usuario'
    | '/_dashboard-layout/dashboard/tiendas/'
    | '/_dashboard-layout/dashboard/usuarios/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
  IniciarSesionRoute: typeof IniciarSesionRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/iniciar-sesion': {
      id: '/iniciar-sesion'
      path: '/iniciar-sesion'
      fullPath: '/iniciar-sesion'
      preLoaderRoute: typeof IniciarSesionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard-layout': {
      id: '/_dashboard-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard-layout/dashboard/': {
      id: '/_dashboard-layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutDashboardIndexRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/_dashboard-layout/dashboard/tickets': {
      id: '/_dashboard-layout/dashboard/tickets'
      path: '/dashboard/tickets'
      fullPath: '/dashboard/tickets'
      preLoaderRoute: typeof DashboardLayoutDashboardTicketsRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/_dashboard-layout/dashboard/configuracion': {
      id: '/_dashboard-layout/dashboard/configuracion'
      path: '/dashboard/configuracion'
      fullPath: '/dashboard/configuracion'
      preLoaderRoute: typeof DashboardLayoutDashboardConfiguracionRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/_dashboard-layout/dashboard/usuarios/': {
      id: '/_dashboard-layout/dashboard/usuarios/'
      path: '/dashboard/usuarios'
      fullPath: '/dashboard/usuarios'
      preLoaderRoute: typeof DashboardLayoutDashboardUsuariosIndexRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/_dashboard-layout/dashboard/tiendas/': {
      id: '/_dashboard-layout/dashboard/tiendas/'
      path: '/dashboard/tiendas'
      fullPath: '/dashboard/tiendas'
      preLoaderRoute: typeof DashboardLayoutDashboardTiendasIndexRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/_dashboard-layout/dashboard/usuarios/nuevo-usuario': {
      id: '/_dashboard-layout/dashboard/usuarios/nuevo-usuario'
      path: '/dashboard/usuarios/nuevo-usuario'
      fullPath: '/dashboard/usuarios/nuevo-usuario'
      preLoaderRoute: typeof DashboardLayoutDashboardUsuariosNuevoUsuarioRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
  }
}

interface DashboardLayoutRouteChildren {
  DashboardLayoutDashboardConfiguracionRoute: typeof DashboardLayoutDashboardConfiguracionRoute
  DashboardLayoutDashboardTicketsRoute: typeof DashboardLayoutDashboardTicketsRoute
  DashboardLayoutDashboardIndexRoute: typeof DashboardLayoutDashboardIndexRoute
  DashboardLayoutDashboardUsuariosNuevoUsuarioRoute: typeof DashboardLayoutDashboardUsuariosNuevoUsuarioRoute
  DashboardLayoutDashboardTiendasIndexRoute: typeof DashboardLayoutDashboardTiendasIndexRoute
  DashboardLayoutDashboardUsuariosIndexRoute: typeof DashboardLayoutDashboardUsuariosIndexRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardLayoutDashboardConfiguracionRoute:
    DashboardLayoutDashboardConfiguracionRoute,
  DashboardLayoutDashboardTicketsRoute: DashboardLayoutDashboardTicketsRoute,
  DashboardLayoutDashboardIndexRoute: DashboardLayoutDashboardIndexRoute,
  DashboardLayoutDashboardUsuariosNuevoUsuarioRoute:
    DashboardLayoutDashboardUsuariosNuevoUsuarioRoute,
  DashboardLayoutDashboardTiendasIndexRoute:
    DashboardLayoutDashboardTiendasIndexRoute,
  DashboardLayoutDashboardUsuariosIndexRoute:
    DashboardLayoutDashboardUsuariosIndexRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
  IniciarSesionRoute: IniciarSesionRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
