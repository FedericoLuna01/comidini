/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as Protected_routesRouteImport } from './routes/_protected_routes'
import { Route as Protected_routesIndexRouteImport } from './routes/_protected_routes/index'
import { Route as Protected_routesTicketsRouteImport } from './routes/_protected_routes/tickets'
import { Route as Protected_routesConfiguracionRouteImport } from './routes/_protected_routes/configuracion'
import { Route as Protected_routesUsuariosIndexRouteImport } from './routes/_protected_routes/usuarios/index'
import { Route as Protected_routesRestaurantsIndexRouteImport } from './routes/_protected_routes/restaurants/index'
import { Route as Protected_routesUsuariosNuevoUsuarioRouteImport } from './routes/_protected_routes/usuarios/nuevo-usuario'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const Protected_routesRoute = Protected_routesRouteImport.update({
  id: '/_protected_routes',
  getParentRoute: () => rootRouteImport,
} as any)
const Protected_routesIndexRoute = Protected_routesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => Protected_routesRoute,
} as any)
const Protected_routesTicketsRoute = Protected_routesTicketsRouteImport.update({
  id: '/tickets',
  path: '/tickets',
  getParentRoute: () => Protected_routesRoute,
} as any)
const Protected_routesConfiguracionRoute =
  Protected_routesConfiguracionRouteImport.update({
    id: '/configuracion',
    path: '/configuracion',
    getParentRoute: () => Protected_routesRoute,
  } as any)
const Protected_routesUsuariosIndexRoute =
  Protected_routesUsuariosIndexRouteImport.update({
    id: '/usuarios/',
    path: '/usuarios/',
    getParentRoute: () => Protected_routesRoute,
  } as any)
const Protected_routesRestaurantsIndexRoute =
  Protected_routesRestaurantsIndexRouteImport.update({
    id: '/restaurants/',
    path: '/restaurants/',
    getParentRoute: () => Protected_routesRoute,
  } as any)
const Protected_routesUsuariosNuevoUsuarioRoute =
  Protected_routesUsuariosNuevoUsuarioRouteImport.update({
    id: '/usuarios/nuevo-usuario',
    path: '/usuarios/nuevo-usuario',
    getParentRoute: () => Protected_routesRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/configuracion': typeof Protected_routesConfiguracionRoute
  '/tickets': typeof Protected_routesTicketsRoute
  '/': typeof Protected_routesIndexRoute
  '/usuarios/nuevo-usuario': typeof Protected_routesUsuariosNuevoUsuarioRoute
  '/restaurants': typeof Protected_routesRestaurantsIndexRoute
  '/usuarios': typeof Protected_routesUsuariosIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/configuracion': typeof Protected_routesConfiguracionRoute
  '/tickets': typeof Protected_routesTicketsRoute
  '/': typeof Protected_routesIndexRoute
  '/usuarios/nuevo-usuario': typeof Protected_routesUsuariosNuevoUsuarioRoute
  '/restaurants': typeof Protected_routesRestaurantsIndexRoute
  '/usuarios': typeof Protected_routesUsuariosIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_protected_routes': typeof Protected_routesRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_protected_routes/configuracion': typeof Protected_routesConfiguracionRoute
  '/_protected_routes/tickets': typeof Protected_routesTicketsRoute
  '/_protected_routes/': typeof Protected_routesIndexRoute
  '/_protected_routes/usuarios/nuevo-usuario': typeof Protected_routesUsuariosNuevoUsuarioRoute
  '/_protected_routes/restaurants/': typeof Protected_routesRestaurantsIndexRoute
  '/_protected_routes/usuarios/': typeof Protected_routesUsuariosIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/register'
    | '/configuracion'
    | '/tickets'
    | '/'
    | '/usuarios/nuevo-usuario'
    | '/restaurants'
    | '/usuarios'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/register'
    | '/configuracion'
    | '/tickets'
    | '/'
    | '/usuarios/nuevo-usuario'
    | '/restaurants'
    | '/usuarios'
  id:
    | '__root__'
    | '/_protected_routes'
    | '/login'
    | '/register'
    | '/_protected_routes/configuracion'
    | '/_protected_routes/tickets'
    | '/_protected_routes/'
    | '/_protected_routes/usuarios/nuevo-usuario'
    | '/_protected_routes/restaurants/'
    | '/_protected_routes/usuarios/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  Protected_routesRoute: typeof Protected_routesRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected_routes': {
      id: '/_protected_routes'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof Protected_routesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected_routes/': {
      id: '/_protected_routes/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof Protected_routesIndexRouteImport
      parentRoute: typeof Protected_routesRoute
    }
    '/_protected_routes/tickets': {
      id: '/_protected_routes/tickets'
      path: '/tickets'
      fullPath: '/tickets'
      preLoaderRoute: typeof Protected_routesTicketsRouteImport
      parentRoute: typeof Protected_routesRoute
    }
    '/_protected_routes/configuracion': {
      id: '/_protected_routes/configuracion'
      path: '/configuracion'
      fullPath: '/configuracion'
      preLoaderRoute: typeof Protected_routesConfiguracionRouteImport
      parentRoute: typeof Protected_routesRoute
    }
    '/_protected_routes/usuarios/': {
      id: '/_protected_routes/usuarios/'
      path: '/usuarios'
      fullPath: '/usuarios'
      preLoaderRoute: typeof Protected_routesUsuariosIndexRouteImport
      parentRoute: typeof Protected_routesRoute
    }
    '/_protected_routes/restaurants/': {
      id: '/_protected_routes/restaurants/'
      path: '/restaurants'
      fullPath: '/restaurants'
      preLoaderRoute: typeof Protected_routesRestaurantsIndexRouteImport
      parentRoute: typeof Protected_routesRoute
    }
    '/_protected_routes/usuarios/nuevo-usuario': {
      id: '/_protected_routes/usuarios/nuevo-usuario'
      path: '/usuarios/nuevo-usuario'
      fullPath: '/usuarios/nuevo-usuario'
      preLoaderRoute: typeof Protected_routesUsuariosNuevoUsuarioRouteImport
      parentRoute: typeof Protected_routesRoute
    }
  }
}

interface Protected_routesRouteChildren {
  Protected_routesConfiguracionRoute: typeof Protected_routesConfiguracionRoute
  Protected_routesTicketsRoute: typeof Protected_routesTicketsRoute
  Protected_routesIndexRoute: typeof Protected_routesIndexRoute
  Protected_routesUsuariosNuevoUsuarioRoute: typeof Protected_routesUsuariosNuevoUsuarioRoute
  Protected_routesRestaurantsIndexRoute: typeof Protected_routesRestaurantsIndexRoute
  Protected_routesUsuariosIndexRoute: typeof Protected_routesUsuariosIndexRoute
}

const Protected_routesRouteChildren: Protected_routesRouteChildren = {
  Protected_routesConfiguracionRoute: Protected_routesConfiguracionRoute,
  Protected_routesTicketsRoute: Protected_routesTicketsRoute,
  Protected_routesIndexRoute: Protected_routesIndexRoute,
  Protected_routesUsuariosNuevoUsuarioRoute:
    Protected_routesUsuariosNuevoUsuarioRoute,
  Protected_routesRestaurantsIndexRoute: Protected_routesRestaurantsIndexRoute,
  Protected_routesUsuariosIndexRoute: Protected_routesUsuariosIndexRoute,
}

const Protected_routesRouteWithChildren =
  Protected_routesRoute._addFileChildren(Protected_routesRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  Protected_routesRoute: Protected_routesRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
